clear
clc
close all

wrun = [1 1 1 1 0 0];

% parametros dos algoritmos
iter_max = 500;
methods = ["Univariante","Powell","Steepest Descent","Fletcher Reeves","Newton-Raphson","BFGS"];

% dados do item 01
f1 = @(x) (x(1)-2)^4 + (x(1)-2*x(2))^2;
gf1 = @(x) [2*(2*(x(1)-2)^3 + x(1) - 2*x(2)); 8*x(2)-4*x(1)];
c1 = @(x) x(1)^2 - x(2);

if wrun(1) == 1
fprintf('************* PROBLEMA 01 - PENALIDADE *********************\n');
x0 = [3;2];
%x0 = [0;4]; % ponto alternativo
alphas =    [0.002, 0.002, 0.002, 0.001, 0.05, 0.04];
bs =        [5, 10, 5, 5, 20, 10];
TOLS =      [1e-4, 1e-4, 1e-4, 1e-4, 1e-4, 1e-5];
TOLS2 =     [1e-6, 1e-5, 1e-9, 1e-7, 1e-7, 1e-8];
plot_model = 0;

if plot_model ~= 0
    figure
    i=3;
    j=3;
end
for m = [1:6]
    k=0;
    x=x0;
    x_values = x;
    rp=0.1;

    tstart = tic;
    fprintf('---%s---\n', methods(m));

    while k < iter_max
        if c1(x) < 0
            a = 0;
        else
            a = 1;
        end
        rp = bs(m)*rp;

        p1 = @(x) a * c1(x)^2;
        phi1 = @(x) f1(x) + 1/2 * rp * p1(x);
        gphi1 = @(x) [2*(a*rp*x(1)*(x(1)^2-x(2))+2*(x(1)-2)^3+x(1)-2*x(2)); -a*rp*x(1)^2+x(2)*(a*rp+8)-4*x(1)];
        hess1 = @(x) ...
            [[2*a*rp*(x(1)^2-x(2)) + 4*a*rp*x(1)^2 + 12*(x(1) - 2)^2 + 2, -2*a*rp*x(1) - 4];
            [-2*a*rp*x(1) - 4, a*rp + 8]];

        [x_] = osr_noprint(phi1, gphi1, hess1, x, m, iter_max, alphas(m), TOLS(m), TOLS2(m));
        k=k+1;

        if 1/2*p1(x)*rp < TOLS(m)*10 && p1(x) ~= 0
            conv=1;
            fprintf('x=[%.4f,%.4f], f(x)=%.4f (%d iter/%.1fms)\n', x(1), x(2), f1(x), k-1, toc(tstart)*1000);
            break;
        end
        x = x_(:,end);
        x_values = [x_values,x];

        intervals = [0 1 2 5 10 25 100:500:10000];
        if m == plot_model
            phi1_plot = @(x1,x2) (x1-2).^4 + (x1-2*x2).^2+1/2*a*rp*(x1.^2-x2).^2;
            c_plot = @(x1) x1.^2;
            intervals = intervals*10;
            tit = strcat(methods(m), ' (k=',num2str(k),')');
            plot_phi(-3, 3, 0, 9, phi1_plot, intervals, c_plot, x_values, tit, k, i, j);
        end
    end

    if ~conv
        fprintf('\n nao deu');
    end
end
end

if wrun(2) == 1
fprintf('************* PROBLEMA 01 - BARREIRA *********************\n');
x0 = [0;1];
%x0 = [2.5;10]; % ponto alternativo
alphas =    [0.0002, 0.0002, 0.0002, 0.0002, 0.002, 0.0002];
bs =        [0.05,      0.2,    0.05, 0.05, 0.05, 0.05];
TOLS =      [2e-4,      6e-4,   2e-4, 2e-4, 1e-6, 2e-4];
TOLS2 =     [1e-8,      1e-5,   1e-7, 1e-7, 1e-7, 1e-5];
plot_model = 0;

if plot_model ~= 0
    figure
    i=2;
    j=3;
end
for m = [1:6]
    k=0;
    x=x0;
    x_values = x;
    rb=100;

    tstart = tic;
    fprintf('---%s---\n', methods(m));

    while k < iter_max
        rb = bs(m)*rb;
        b1 = @(x) - c1(x)^(-1);
        phib1 = @(x) f1(x) + rb * b1(x); % (x-2)^4 + (x-2y)^2 - a/(x^2-y)

        gphib1 = @(x) ... % (2 ((a x)/(x^2 - y)^2 + 2 (x - 2)^3 + x - 2 y), -a/(x^2 - y)^2 - 4 x + 8 y)
            [2*((rb*x(1))/(x(1)^2-x(2))^2 + 2*(x(1)-2)^3 + x(1)-2*x(2)); ...
            -rb/(x(1)^2-x(2))^2 - 4*x(1)+8*x(2)];

        hessb1 = @(x) ...
            [[2 + 12*(-2 + x(1))^2 - (8*rb*x(1)^2)/(x(1)^2 - x(2))^3 + (2*rb)/(x(1)^2 - x(2))^2, -4 + (4*rb*x(1))/(x(1)^2 - x(2))^3]; ...
            [-4 + (4*rb*x(1))/(x(1)^2 - x(2))^3, 8 - (2*rb)/(x(1)^2 - x(2))^3]];

        [x_] = osr_noprint(phib1, gphib1, hessb1, x, m, iter_max, alphas(m), TOLS(m), TOLS2(m));

        b1(x)*rb;
        if b1(x)*rb < TOLS(m)
            conv=1;
            c1(x);
            fprintf('x=[%.4f,%.4f], f(x)=%.4f (%d iter/%.1fms)\n', x(1), x(2), f1(x), k, toc(tstart)*1000);
            break;
        end
        x = x_(:,end);
        x_values = [x_values,x];

        k=k+1;

        intervals = 10.^[-2:.5:5];
        if m == plot_model
            phib1_plot = @(x1,x2) (x1-2).^4 + (x1-2*x2).^2 - rb./(x1.^2-x2);
            c_plot = @(x1) x1.^2;
            tit = strcat(methods(m), ' (k=',num2str(k),')');
            plot_phi(-2, 2, 0, 4, phib1_plot, intervals, c_plot, x_values, tit, k, i , j);
        end
    end

    if ~conv
        fprintf('\n nao deu');
    end
end
end

% dados do item 02
% ro = 0.3;
% B = 30;
% P = 33e3;
% t = 0.1;
% E = 3e7;
% sy = 1e5;
% f2 = @(x) 2*ro*pi()*x(1)*t*sqrt(x(2)^2+B^2);
f2 = @(x) 0.1885*x(1)*sqrt(x(2)^2+900);
c2a = @(x) 1.0504*sqrt(x(2)^2+900)/(x(1)*x(2)) - 1;
c2b = @(x) 1.0504*sqrt(x(2)^2+900)/(x(1)*x(2)) - 3.7011e2*(x(1)^2+0.01)/(x(2)^2+900);

if wrun(3) == 1
fprintf('************* PROBLEMA 02 - PENALIDADE *********************\n');
x0 = [1;15];
%x0 = [3;3]; %ponto alternativo
alphas =    [0.005, 0.005, 0.0001,  0.0001, 0.0002, 0.0002];
bs =        [10,    50,      10,    10,     10,       10];
TOLS =      [1e-6,  1e-6,   2e-3,   1e-3,   1e-5,   5e-3];
TOLS_OCR =  [1e-6,  1e-6,   1e-4,   5e-4,   1e-6,   1e-4];
TOLS2 =     [1e-7,  1e-5,   1e-7,   1e-7,   1e-7,   1e-7];
plot_model = 0;

if plot_model ~= 0
    figure
    i=4;
    j=4;
end
for m = [1:6]
    k=0;
    x=x0;
    x_values = x;
    rp=1e-8;

    tstart = tic;
    fprintf('---%s---\n', methods(m));

    while k < 20
        if c2a(x) < 0
            a(1) = 0;
        else
            a(1) = 1;
        end
        if c2b(x) < 0
            a(2) = 0;
        else
            a(2) = 1;
        end

%         fprintf('k=%d x=[%.4f,%.4f] c1=%.1f c2=%.1f a=[%d,%d] ',k,x(1),x(2),c2a(x),c2b(x),a(1),a(2))

        rp = bs(m)*rp;
        p2 = @(x) a(1) * c2a(x)^2 + a(2) * c2b(x)^2;
        phi2 = @(x) f2(x) + 1/2 * rp * p2(x);

%         wolfram (phi)
%         0.1885*x*sqrt(y^2+900) +
%         1/2 *c*a*(1.0504*sqrt(y^2+900)/(x*y) - 1)^2 +
%         1/2 *c*b*(1.0504*sqrt(y^2+900)/(x*y) - 370.11*(x^2+0.01)/(y^2+900))^2

        g2f = @(x) ...
            [0.1885*sqrt(x(2)^2+900);
            (0.1885*x(1)*x(2))/sqrt(x(2)^2+900)];
        g2c1 = @(x) ...
            [(a(1)*rp*(1.0504*x(1)*sqrt(x(2)^2+900)*x(2)-1.10334*x(2)^2-993.006))/(x(1)^3*x(2)^2);
            (a(1)*rp*((945.36*x(1)*x(2))/sqrt(x(2)^2+900)-993.006))/(x(1)^2*x(2)^3)];
        g2c2 = @(x) ...
            [a(2)*rp*(-(1.0504*sqrt(x(2)^2 + 900))/(x(1)^2*x(2)) - (740.22*x(1))/(x(2)^2 + 900))*((1.0504*sqrt(x(2)^2 + 900))/(x(1)*x(2)) - (370.11*(x(1)^2 + 0.01))/(x(2)^2 + 900));
            a(2)*rp*((740.22*x(1)^2*x(2))/(x(2)^2 + 900)^2 - 945.36/(x(1)*x(2)^2*sqrt(x(2)^2 + 900)) + (7.4022*x(2))/(x(2)^2 + 900)^2)*((1.0504*sqrt(x(2)^2 + 900))/(x(1)*x(2)) - (370.11*(x(1)^2 + 0.01))/(x(2)^2 + 900))];

        gphi2 = @(x) g2f(x)+g2c1(x)+g2c2(x);

        hess2 = @(x) ...
            [[(1.10334*a(1)*rp*(900 + x(2)^2))/(x(1)^4*x(2)^2) + a(2)*rp*((-740.22*x(1))/(900 + x(2)^2) - (1.0504*sqrt(900 + x(2)^2))/(x(1)^2*x(2)))^2 + (2.1008*a(1)*rp*sqrt(900 + x(2)^2)*(-1 + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2))))/(x(1)^3*x(2)) + a(2)*rp*(-740.22/(900 + x(2)^2) + (2.1008*sqrt(900 + x(2)^2))/(x(1)^3*x(2)))*((-370.11*(0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2))), ...
            (0.1885*x(2))/sqrt(900 + x(2)^2) - (1.0504*a(1)*rp*sqrt(900 + x(2)^2)*(1.0504/(x(1)*sqrt(900 + x(2)^2)) - (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2)^2)))/(x(1)^2*x(2)) + a(2)*rp*((740.22* (0.01 + x(1)^2)*x(2))/(900 + x(2)^2)^2 + 1.0504/(x(1)*sqrt(900 + x(2)^2)) - (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2)^2))*((-740.22*x(1))/(900 + x(2)^2) - (1.0504*sqrt(900 + x(2)^2))/(x(1)^2*x(2))) - (1.0504*a(1)*rp*(-1 + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2))))/(x(1)^2*sqrt(900 + x(2)^2)) + (1.0504*a(1)*rp*sqrt(900 + x(2)^2)*(-1 + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2))))/(x(1)^2*x(2)^2) + a(2)*rp*((1480.44*x(1)*x(2))/(900 + x(2)^2)^2 - 1.0504/(x(1)^2*sqrt(900 + x(2)^2)) + (1.0504*sqrt(900 + x(2)^2))/(x(1)^2*x(2)^2))* ((-370.11*(0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2)))]; ...
            [(0.1885*x(2))/sqrt(900 + x(2)^2) - (1.0504*a(1)*rp*sqrt(900 + x(2)^2)*(1.0504/(x(1)*sqrt(900 + x(2)^2)) - (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2)^2)))/(x(1)^2*x(2)) + a(2)*rp*((740.22* (0.01 + x(1)^2)*x(2))/(900 + x(2)^2)^2 + 1.0504/(x(1)*sqrt(900 + x(2)^2)) - (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2)^2))*((-740.22*x(1))/(900 + x(2)^2) - (1.0504*sqrt(900 + x(2)^2))/(x(1)^2*x(2))) - (1.0504*a(1)*rp*(-1 + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2))))/(x(1)^2*sqrt(900 + x(2)^2)) + (1.0504*a(1)*rp*sqrt(900 + x(2)^2)*(-1 + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2))))/(x(1)^2*x(2)^2) + a(2)*rp*((1480.44*x(1)*x(2))/(900 + x(2)^2)^2 - 1.0504/(x(1)^2*sqrt(900 + x(2)^2)) + (1.0504*sqrt(900 + x(2)^2))/(x(1)^2*x(2)^2))* ((-370.11*(0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2))), ...
            (-0.1885*x(1)*x(2)^2)/(900 + x(2)^2)^(3/2) + (0.1885*x(1))/sqrt(900 + x(2)^2) + a(1)*rp*(1.0504/(x(1)*sqrt(900 + x(2)^2)) - (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2)^2))^2 + a(2)*rp*((740.22*(0.01 + x(1)^2)*x(2))/(900 + x(2)^2)^2 + 1.0504/(x(1)*sqrt(900 + x(2)^2)) - (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2)^2))^2 + a(1)*rp*((-1.0504*x(2))/(x(1)*(900 + x(2)^2)^(3/2)) - 1.0504/(x(1)*x(2)*sqrt(900 + x(2)^2)) + (2.1008*sqrt(900 + x(2)^2))/(x(1)*x(2)^3))*(-1 + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2))) + a(2)*rp*((-2960.88*(0.01 + x(1)^2)*x(2)^2)/(900 + x(2)^2)^3 + (740.22*(0.01 + x(1)^2))/(900 + x(2)^2)^2 - (1.0504*x(2))/(x(1)*(900 + x(2)^2)^(3/2)) - 1.0504/(x(1)*x(2)*sqrt(900 + x(2)^2)) + (2.1008*sqrt(900 + x(2)^2))/(x(1)*x(2)^3))*((-370.11*(0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504*sqrt(900 + x(2)^2))/(x(1)*x(2)))]];

%         [x_,~] = osr(phi2, gphi2, hess1, x, m, 400, alphas(m), TOLS(m), TOLS2(m));
        [x_] = osr_noprint(phi2, gphi2, hess2, x, m, 400, alphas(m), TOLS(m), TOLS2(m));
        x = x_(:,end);
        x_values = [x_values,x];
        k=k+1;

%         fprintf('phi(x)= %.2f\n', phi2(x))
%         fprintf('<p(x)rp>= %.2e\n', 1/2*p2(x)*rp)
        if 1/2*p2(x)*rp < TOLS_OCR(m)
            conv=1;
            fprintf('x=[%.4f,%.4f], f(x)=%.4f (%d iter/%.1fms)\n', x(1), x(2), f2(x), k-1, toc(tstart)*1000);
            break;
        end

        intervals=10.^[-3:.1:6];
        if m == plot_model
            phi2_plot = @(x1,x2) ...
                0.1885.*x1.*sqrt(x2.^2+900) + ...
                1/2*rp*a(1)*(1.0504.*sqrt(x2.^2+900)./(x1.*x2) - 1).^2 + ...
                1/2*rp*a(2)*(1.0504.*sqrt(x2.^2+900)./(x1.*x2) - 3.7011e2.*(x1.^2+0.01)./(x2.^2+900)).^2;
            c_plot = @(x1) -1;
%             intervals = intervals/10;
            tit = strcat(methods(m), ' (k=',num2str(k),')');
            plot_phi(0, 4, 1, 100, phi2_plot, intervals, c_plot, x_values, tit, k, i, j);
        end
    end

    if ~conv
        fprintf('\n nao deu');
    end
end
end

if wrun(4) == 1
fprintf('************* PROBLEMA 02 - BARREIRA *********************\n');
x0 = [4;25];
% x0 = [10;5];
% verifica se o ponto alternativo) esta na regiao viavel
% c2a(x0)
% c2b(x0)
alphas =    [0.0001,  0.0001,  0.00002, 0.00002, 0.001,   0.0002];
bs =        [  0.12,    0.09,   0.005,   0.008,   0.01,   0.0006];
TOLS =      [  1e-4,    1e-4,    5e-4,   1e-4,    1e-6,    1e-5];
TOLS_OCR =  [  2e-4,    2e-4,    2e-4,   3e-4,    1e-6,    1e-4];
TOLS2 =     [  1e-9,    1e-10,   1e-9,   1e-7,    1e-6,    1e-8];
plot_model = 0;

if plot_model ~= 0
    figure
    i=3;
    j=2;
end
for m = [1:6]
    k=0;
    x=x0;
    x_values = x;
    rb=1e7;

    tstart = tic;
    fprintf('---%s---\n', methods(m));

    while k < iter_max
        rb = bs(m)*rb;
        b2 = @(x) -c2a(x)^-1 -c2b(x)^-1;
        phib2 = @(x) f2(x) + rb * b2(x);

%         fprintf('k=%d x=[%.4f,%.4f] c1=%.1f c2=%.1f ',k,x(1),x(2),c2a(x),c2b(x))

%         wolfram (phi)
%         0.1885*x*sqrt(y^2+900) +
%         -rb/ (1.0504*sqrt(y^2+900)/(x*y) - 1)
%         -rb/ (1.0504*sqrt(y^2+900)/(x*y) - 370.11*(x^2+0.01)/(y^2+900))

        g2f = @(x) ...
            [0.1885*sqrt(x(2)^2+900);
            (0.1885*x(1)*x(2))/sqrt(x(2)^2+900)];

        g2c1 = @(x) ...
            [-(0.952018*rb*x(2)*sqrt(x(2)^2 + 900))/(0.952018*x(1)*x(2) - sqrt(x(2)^2 + 900))^2;
            -(856.816*rb*x(1))/(sqrt(x(2)^2 + 900)*(0.952018*x(1)*x(2) - sqrt(x(2)^2 + 900))^2)];

        g2c2 = @(x) ...
            [-(0.952018*rb*x(2)*(x(2)^2 + 900)*(704.703*x(1)^3*x(2) + (x(2)^2 + 900)^(3/2)))/(352.351*x(1)^3*x(2) + 3.52351*x(1)*x(2) - (x(2)^2 + 900)^(3/2))^2; ...
            (670.89*rb*x(1)*((x(1)^3 + 0.01*x(1))*sqrt(x(2)^2 + 900)*x(2)^3 - 1.27713*x(2)^4 - 2298.84*x(2)^2 - 1.03448*10^6))/(sqrt(x(2)^2 + 900)*(352.351*x(1)^3*x(2) + 3.52351*x(1)*x(2) - (x(2)^2 + 900)^(3/2))^2)];

        gphib2 = @(x) g2f(x)+g2c1(x)+g2c2(x);

        hessf = @(x) ...
            [[0, ...
             (0.1885*x(2))/sqrt(900 + x(2)^2)];
             [(0.1885* x(2))/sqrt(900 + x(2)^2), ...
             (-0.1885* x(1)* x(2)^2)/(900 + x(2)^2)^(3/2) + (0.1885* x(1))/sqrt(900 + x(2)^2)]];

        hessc1 = @(x) ...
            [[(-2.20668* rb* (900 + x(2)^2))/(x(1)^4* x(2)^2* (-1 + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^3) + (2.1008 *rb *sqrt(900 + x(2)^2))/(x(1)^3* x(2)* (-1 + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^2), ...
             (2.1008 *rb* sqrt(900 + x(2)^2)* (1.0504/(x(1)* sqrt(900 + x(2)^2)) - (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)^2)))/(x(1)^2* x(2)* (-1 + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^3) - (1.0504 *rb)/(x(1)^2* sqrt(900 + x(2)^2)* (-1 + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^2) + (1.0504 *rb* sqrt(900 + x(2)^2))/(x(1)^2* x(2)^2 *(-1 + (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)))^2)];
             [(2.1008 *rb* sqrt(900 + x(2)^2)* (1.0504/(x(1)* sqrt(900 + x(2)^2)) - (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)^2)))/(x(1)^2* x(2)* (-1 + (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)))^3) + (rb* (-1.0504/(x(1)^2 *sqrt(900 + x(2)^2)) + (1.0504* sqrt(900 + x(2)^2))/(x(1)^2* x(2)^2)))/(-1 + (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)))^2, ...
              (-2* rb* (1.0504/(x(1)* sqrt(900 + x(2)^2)) - (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)^2))^2)/(-1 + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^3 + (rb* ((-1.0504 *x(2))/(x(1)* (900 + x(2)^2)^(3/2)) - 1.0504/(x(1) *x(2)* sqrt(900 + x(2)^2)) + (2.1008* sqrt(900 + x(2)^2))/(x(1)* x(2)^3)))/(-1 + (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)))^2]];

        hessc2 = @(x) ...
            [[(-2*rb* ((-740.22* x(1))/(900 + x(2)^2) - (1.0504 *sqrt(900 + x(2)^2))/(x(1)^2* x(2)))^2)/((-370.11* (0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)))^3 + (rb *(-740.22/(900 + x(2)^2) + (2.1008 *sqrt(900 + x(2)^2))/(x(1)^3* x(2))))/((-370.11* (0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504* sqrt(900 + x(2)^2))/(x(1)*x(2)))^2, ...
             (-2* rb* ((740.22* (0.01 + x(1)^2)* x(2))/(900 + x(2)^2)^2 + 1.0504/(x(1) *sqrt(900 + x(2)^2)) - (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)^2)) *((-740.22* x(1))/(900 + x(2)^2) - (1.0504 *sqrt(900 + x(2)^2))/(x(1)^2* x(2))))/((-370.11* (0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^3 + (rb* ((1480.44* x(1)* x(2))/(900 + x(2)^2)^2 - 1.0504/(x(1)^2* sqrt(900 + x(2)^2)) + (1.0504* sqrt(900 + x(2)^2))/(x(1)^2* x(2)^2)))/((-370.11* (0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^2];
              [(-2* rb* ((740.22* (0.01 + x(1)^2)* x(2))/(900 + x(2)^2)^2 + 1.0504/(x(1) *sqrt(900 + x(2)^2)) - (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)^2)) *((-740.22* x(1))/(900 + x(2)^2) - (1.0504 *sqrt(900 + x(2)^2))/(x(1)^2* x(2))))/((-370.11* (0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^3 + (rb* ((1480.44* x(1)* x(2))/(900 + x(2)^2)^2 - 1.0504/(x(1)^2* sqrt(900 + x(2)^2)) + (1.0504* sqrt(900 + x(2)^2))/(x(1)^2* x(2)^2)))/((-370.11* (0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^2, ...
               (-2*rb* ((740.22* (0.01 + x(1)^2)*x(2))/(900 + x(2)^2)^2 + 1.0504/(x(1)* sqrt(900 + x(2)^2)) - (1.0504 *sqrt(900 + x(2)^2))/(x(1)* x(2)^2))^2)/((-370.11* (0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^3 + (rb* ((-2960.88* (0.01 + x(1)^2)* x(2)^2)/(900 + x(2)^2)^3 + (740.22* (0.01 + x(1)^2))/(900 + x(2)^2)^2 - (1.0504* x(2))/(x(1)* (900 + x(2)^2)^(3/2)) - 1.0504/(x(1)* x(2)* sqrt(900 + x(2)^2)) + (2.1008* sqrt(900 + x(2)^2))/(x(1)* x(2)^3)))/((-370.11* (0.01 + x(1)^2))/(900 + x(2)^2) + (1.0504* sqrt(900 + x(2)^2))/(x(1)* x(2)))^2]];

        hess2= @(x) hessf(x)+hessc1(x)+hessc2(x);

%         [x_, ~] = osr(phib2, gphib2, hessb1, x, m, 300 , alphas(m), TOLS(m), TOLS2(m));
        [x_] = osr_noprint(phib2, gphib2, hess2, x, m, 300, alphas(m), TOLS(m), TOLS2(m));

%         fprintf('phi(x)= %.2f ', phib2(x))
%         fprintf('<b rb>= %.2e\n', b2(x)*rb)
        if b2(x)*rb/2 < TOLS_OCR(m)
            conv=1;
            c1(x);
            fprintf('x=[%.4f,%.4f], f(x)=%.4f (%d iter/%.1fms)\n', x(1), x(2), f2(x), k, toc(tstart)*1000);
            break;
        end
        x = x_(:,end);
        x_values = [x_values,x];

        % testa se o ponto rompeu a barreira
        k=k+1;

        intervals = 10.^[1:.1:6];
%         intervals=[];
        if m == plot_model
            phi2_plot = @(x1,x2) ...
                0.1885*x1.*sqrt(x2.^2+900) + ...
                 -rb./(1.0504*sqrt(x2.^2+900)./(x1.*x2) - 1) ...
                 -rb./(1.0504*sqrt(x2.^2+900)./(x1.*x2) - 370.11.*(x1.^2+0.01)./(x2.^2+900));
            c_plot = @(x1) -1;
            tit = strcat(methods(m), ' (k=',num2str(k),')');
            plot_phi(1, 150, 1, 30, phi2_plot, intervals, c_plot, x_values, tit, k, i, j);
        end
    end

    if ~conv
        fprintf('\n nao deu');
    end
end
end


% dados do problema 03
f3 = @(x) (x(1)-10)^3+(x(2)-20)^3;
c3a = @(x) 100-(x(1)-5)^2-(x(2)-5)^2;
c3b = @(x) -82.81-(x(1)-6)^2-(x(2)-5)^2;
c3c = @(x) 13-x(1);
c3d = @(x) x(1)-100;
c3e = @(x) -x(2);
c3f = @(x) x(2)-100;

if wrun(5) == 1
fprintf('************* PROBLEMA 03 - PENALIDADE *********************\n');
x0 = [14;6]; %x0 = [3;3];
alphas =    [0.001, 0.0002,  0.0001,  0.0001, 0.00001, 0.0002];
bs =        [10,           10,       11,    40,     10,       10];
TOLS =      [1e-5,       1e-3,     1e-5,   1e-3,   1e-4,   5e-3];
TOLS_OCR =  [1e-2,       1e-6,     1e-5,   5e-4,   1e-4,   1e-4];
TOLS2 =     [1e-10,      1e-5,     1e-11,   1e-7,   1e-11,   1e-7];
plot_model = 0;

if plot_model ~= 0
    figure
    i=4;
    j=4;
end
for m = [1]
    k=0;
    x=x0;
    x_values = x;
    rp=0.1;

    tstart = tic;
    fprintf('---%s---\n', methods(m));

    while k < 30
        if c3a(x) < 0
            a(1) = 0;
        else
            a(1) = 1;
        end
        if c3b(x) < 0
            a(2) = 0;
        else
            a(2) = 1;
        end
        if c3c(x) < 0
            a(3) = 0;
        else
            a(3) = 1;
        end
        if c3d(x) < 0
            a(4) = 0;
        else
            a(4) = 1;
        end
        if c3e(x) < 0
            a(5) = 0;
        else
            a(5) = 1;
        end
        if c3f(x) < 0
            a(6) = 0;
        else
            a(6) = 1;
        end

%         fprintf('k=%d x=[%.4f,%.4f] c=%d,%d,%d,%d,%d,%d ',k,x(1),x(2),c3a(x),c3b(x),c3c(x),c3d(x),c3e(x),c3f(x))
%         fprintf('a=%d,%d,%d,%d,%d,%d ',a(1),a(2),a(3),a(4),a(5),a(6))
        fprintf('k=%d x=[%.4f,%.4f]',k,x(1),x(2));

        rp = bs(m)*rp;
        p3 = @(x) a(1)*c3a(x)^2 + a(2)*c3b(x)^2 + a(3)*c3c(x)^2 + a(4)*c3d(x)^2 + a(5)*c3e(x)^2 + a(6)*c3f(x)^2;
        phi3 = @(x) f3(x) + 1/2 * rp * p3(x);

%         wolfram (phi)
%             (x-10)^3+(y-20)^3
%             1/2*a*m*(100-(x-5)^2-(y-5)^2)^2
%             1/2*b*m*(-82.81-(x-6)^2-(y-5)^2)^2
%             1/2*c*m*(13-x)^2
%             1/2*d*m*(x-100)^2
%             1/2*e*m*(-y)^2
%             1/2*f*m*(y-100)^2

        grad3 = @(x) ...
            [3*(x(1) - 10)^2; 3* (x(2) - 20)^2]+ ...
            [2* a(1)* rp* (x(1) - 5)* (x(1)^2 - 10* x(1) + x(2)^2 - 10* x(2) - 50); 2* a(1)* rp* (x(2) - 5)* (x(1)^2 - 10* x(1) + x(2)^2 - 10* x(2) - 50)] + ...
            [2* a(2)* rp* (x(1) - 6)* (x(1)^2 - 12* x(1) + x(2)^2 - 10* x(2) + 143.81); 2* a(2)* rp* (x(2) - 5)* (x(1)^2 - 12* x(1) + x(2)^2 - 10* x(2) + 143.81)] + ...
            [a(3)* rp* (x(1) - 13); 0] + ...
            [a(4)* rp* (x(1) - 100); 0] + ...
            [0; a(5)* rp *x(2)] + ...
            [0; a(6)* rp* (x(2) - 100)];
        %             [2*a(1)*rp*(x(1)-5)*(x(1)^2-10*x(1)+x(2)^2-10*x(2)-50)+2*a(2)*rp*(x(1)-6)*(x(1)^2-12*x(1)+x(2)^2-10*x(2)+143.81)+a(3)*rp*(x(1)-13)+a(4)*rp*(x(1)-100)+3*(x(1)-10)^2;
%             2*a(1)*rp*(x(2)-5)*(x(1)^2-10*x(1)+x(2)^2-10*x(2)-50)+2*a(2)*rp*(x(2)-5)*(x(1)^2-12*x(1)+x(2)^2-10*x(2)+143.81)+a(5)*rp*x(2)+a(6)*rp*(x(2)-100)+3*(x(2)-20)^2];

        hess3 = @(x) ...
            [[6* (-10 + x(1)), 0]; [0, 6* (-20 + x(2))]] + ...
            [[4* a(1)* rp* (-5 + x(1))^2 - 2* a(1)* rp* (100 - (-5 + x(1))^2 - (-5 + x(2))^2), 4* a(1)* rp* (-5 + x(1))* (-5 + x(2))]; [4* a(1)* rp* (-5 + x(1))* (-5 + x(2)), -2* a(1)* rp* (100 - (-5 + x(1))^2 - (-5 + x(2))^2) + 4* a(1)* rp* (-5 + x(2))^2]] + ...
            [[4*a(2)*rp*(-6 + x(1))^2 - 2*a(2)*rp*(-82.81 - (-6 + x(1))^2 - (-5 + x(2))^2), 4* a(2)*rp*(-6 + x(1))*(-5 + x(2))];[4*a(2)*rp*(-6 + x(1))*(-5 + x(2)), -2*a(2)*rp*(-82.81 - (-6 + x(1))^2 - (-5 + x(2))^2) + 4 *a(2)*rp*(-5 + x(2))^2]] + ...
            [[a(3)* rp, 0]; [0, 0]] + ...
            [[a(4)* rp, 0]; [0, 0]] + ...
            [[0, 0]; [0, a(5)* rp]] + ...
            [[0, 0]; [0, a(6)* rp]];

        [x_,~] = osr(phi3, grad3, hess3, x, m, 500, alphas(m), TOLS(m), TOLS2(m));
%         [x_] = osr_noprint(phi3, grad3, hess3, x, m, 500, alphas(m), TOLS(m), TOLS2(m));
        x = x_(:,end);
        x_values = [x_values,x];
        k=k+1;

%         fprintf('phi(x)= %.2f\n', phi2(x))
        fprintf('<p(x)rp>= %.2e\n', 1/2*p3(x)*rp)
        if 1/2*p3(x)*rp < TOLS_OCR(m)
            conv=1;
            fprintf('x=[%.4f,%.4f], f(x)=%.4f (%d iter/%.1fms)\n', x(1), x(2), f2(x), k-1, toc(tstart)*1000);
            break;
        end

        intervals=10.^[-3:.1:6];
        if m == plot_model
            phi2_plot = @(x1,x2) ...
                0.1885.*x1.*sqrt(x2.^2+900) + ...
                1/2*rp*a(1)*(1.0504.*sqrt(x2.^2+900)./(x1.*x2) - 1).^2 + ...
                1/2*rp*a(2)*(1.0504.*sqrt(x2.^2+900)./(x1.*x2) - 3.7011e2.*(x1.^2+0.01)./(x2.^2+900)).^2;
            c_plot = @(x1) -1;
%             intervals = intervals/10;
            tit = strcat(methods(m), ' (k=',num2str(k),')');
            plot_phi(0, 4, 1, 100, phi2_plot, intervals, c_plot, x_values, tit, k, i, j);
        end
    end

    if ~conv
        fprintf('\n nao deu');
    end
end
end

if wrun(6) == 1
fprintf('************* PROBLEMA 03 - BARREIRA *********************\n');
x0 = [30;20];
alphas =    [ 0.0002, 0.00001, 0.0001, 0.001,  0.000005,   0.0001];
bs =        [   0.1,   0.5,     0.1,   0.2,     0.1,   0.10];
TOLS =      [  1e-5,  1e-4,    1e-5,   1e-4,    1e-5,    1e-5];
TOLS_OCR =  [ 2e-15,  2e-11,   2e-4,   3e-4,    1e-6,    1e-4];
TOLS2 =     [  1e-8,  1e-10,   1e-9,   1e-7,    1e-10,    1e-8];
plot_model = 0;

if plot_model ~= 0
    figure
    i=3;
    j=3;
end
for m = [5]
    k=0;
    x=x0;
    x_values = x;
    rb=100;

    tstart = tic;
    fprintf('---%s---\n', methods(m));

    while k < iter_max
        rb = bs(m)*rb;
        b3 = @(x) -1/c3a(x) -1/c3b(x) -1/c3c(x) -1/c3d(x) -1/c3e(x) -1/c3f(x);
        phi3 = @(x) f3(x) + rb * b3(x);

        fprintf('k=%d x=[%.4f,%.4f] c=(%.0f,%.0f,%.0f,%.0f,%.0f,%.0f)\n',k,x(1),x(2),c3a(x),c3b(x),c3c(x),c3d(x),c3e(x),c3f(x))
%         fprintf('k=%d x=[%.4f,%.4f]',k,x(1),x(2));

%       wolfram (phi)
%       (x-10)^3+(y-20)^3
%       -m/(100-(x-5)^2-(y-5)^2)
%       -m/(-82.81-(x-6)^2-(y-5)^2)
%       -m/(13-x)
%       -m/(x-100)
%       -m/(-y)
%       -m/(y-100)

        grad3 = @(x) ...
            [-(2*rb*(x(1)-6))/(x(1)^2-12*x(1)+x(2)^2-10*x(2)+143.81)^2-(2*rb*(x(1)-5))/(x(1)^2-10*x(1)+x(2)^2-10*x(2)-50)^2+rb/(x(1)-100)^2-rb/(x(1)-13)^2+3*(x(1)-10)^2; ...
            -(2*rb*(x(2)-5))/(x(1)^2-12*x(1)+x(2)^2-10*x(2)+143.81)^2-(2*rb*(x(2)-5))/(x(1)^2-10*x(1)+x(2)^2-10*x(2)-50)^2-rb/x(2)^2+rb/(x(2)-100)^2+3*(x(2)-20)^2];

        hess3 = @(x) ...
            [[-(8* rb* (x(1) - 6)^2)/(-(x(1) - 6)^2 - (x(2) - 5)^2 - 82.81)^3 - (2* rb)/(-(x(1) - 6)^2 - (x(2) - 5)^2 - 82.81)^2 - (2* rb)/(-(x(1) - 5)^2 - (x(2) - 5)^2 + 100)^2 - (8* rb* (x(1) - 5)^2)/(-(x(1) - 5)^2 - (x(2) - 5)^2 + 100)^3 - (2* rb)/(13 - x(1))^3 - (2* rb)/(x(1) - 100)^3 + 6* (x(1) - 10), ...
            -(8* rb* (x(1) - 6)* (x(2) - 5))/(-(x(1) - 6)^2 - (x(2) - 5)^2 - 82.81)^3 - (8* rb* (x(1) - 5)* (x(2) - 5))/(-(x(1) - 5)^2 - (x(2) - 5)^2 + 100)^3];
            [-(8* rb* (x(1) - 6)* (x(2) - 5))/(-(x(1) - 6)^2 - (x(2) - 5)^2 - 82.81)^3 - (8* rb* (x(1) - 5)* (x(2) - 5))/(-(x(1) - 5)^2 - (x(2) - 5)^2 + 100)^3, ...
            -(8* rb* (x(2) - 5)^2)/(-(x(1) - 6)^2 - (x(2) - 5)^2 - 82.81)^3 - (8* rb* (x(2) - 5)^2)/(-(x(1) - 5)^2 - (x(2) - 5)^2 + 100)^3 - (2* rb)/(-(x(1) - 6)^2 - (x(2) - 5)^2 - 82.81)^2 - (2* rb)/(-(x(1) - 5)^2 - (x(2) - 5)^2 + 100)^2 + (2* rb)/x(2)^3 - (2* rb)/(x(2) - 100)^3 + 6* (x(2) - 20)]];

        [x_,~] = osr3(phi3, grad3, hess3, x, m, 1000, alphas(m), TOLS(m), TOLS2(m));
%         [x_] = osr_noprint(phi3, grad3, hess3, x, m, 500, alphas(m), TOLS(m), TOLS2(m));

%         fprintf('phi(x)= %.1f \n', phi3(x))
%         fprintf('<b rb>= %.2e\n', b3(x)*rb)
        if b3(x)*rb/2 < TOLS_OCR(m) && b3(x) > 0
            conv=1;
            c1(x);
            fprintf('x=[%.4f,%.4f], f(x)=%.4f (%d iter/%.1fms)\n', x(1), x(2), f2(x), k, toc(tstart)*1000);
            break;
        end
        x = x_(:,end);
        x_values = [x_values,x];

        % testa se o ponto rompeu a barreira
        k=k+1;

        intervals = 10.^[1:.1:6];
%         intervals=[];
        if m == plot_model
            phi2_plot = @(x1,x2) ...
                0.1885*x1.*sqrt(x2.^2+900) + ...
                 -rb./(1.0504*sqrt(x2.^2+900)./(x1.*x2) - 1) ...
                 -rb./(1.0504*sqrt(x2.^2+900)./(x1.*x2) - 370.11.*(x1.^2+0.01)./(x2.^2+900));
            c_plot = @(x1) -1;
            tit = strcat(methods(m), ' (k=',num2str(k),')');
            plot_phi(1, 150, 1, 30, phi2_plot, intervals, c_plot, x_values, tit, k, i, j);
        end
    end

    if ~conv
        fprintf('\n nao deu');
    end
end
end
